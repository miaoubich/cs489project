buildscript {
    ext {
        springBootVersion = '3.2.2'
        springDependencyManagementVersion = '1.1.4'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    group =  'com.casumo'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootJar {
    archiveFileName = 'service.jar'
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	// JWT Jackson (contains Jackson JSON support for JWT)
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    // JWT API (contains the core JWT functionality)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    // JWT Implementation (contains the default implementation for JWT)
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
}

testing {
    suites {
        configureEach {
            useJUnitJupiter()
        }

        test {
            dependencies {
                implementation("org.springframework.boot:spring-boot-starter-test") {
                    exclude group: "org.junit.vintage", module: "junit-vintage-engine"
                }
            }
        }
    }
}